{\n  "data_sources": [\n    {\n      "file": "../input/mnist_train.csv",\n      "description": "Training dataset containing labeled MNIST images."\n    },\n    {\n      "file": "../input/mnist_test.csv",\n      "description": "Test dataset containing unlabeled MNIST images."\n    }\n  ],\n  "data_variables": [\n    {\n      "variable": "train",\n      "description": "Training dataset loaded from mnist_train.csv."\n    },\n    {\n      "variable": "test",\n      "description": "Test dataset loaded from mnist_test.csv."\n    },\n    {\n      "variable": "train_x",\n      "description": "Input features for the training dataset, reshaped to a suitable format."\n    },\n    {\n      "variable": "train_y",\n      "description": "One-hot encoded target variables for the training dataset."\n    },\n    {\n      "variable": "test_x",\n      "description": "Input features for the test dataset, reshaped to a suitable format."\n    },\n    {\n      "variable": "test_y",\n      "description": "One-hot encoded target variables for the test dataset."\n    },\n    {\n      "variable": "weights",\n      "description": "Dictionary containing weight variables for the convolutional layers."\n    },\n    {\n      "variable": "biases",\n      "description": "Dictionary containing bias variables for the convolutional layers."\n    },\n    {\n      "variable": "pred",\n      "description": "TensorFlow model predictions from the convolutional neural network."\n    }\n  ],\n  "data_flow": [\n    {\n      "variable": "train",\n      "creation": "pd.read_csv",\n      "flows": ["Converted to numpy array and split into features (train_x) and labels (train_y)."]\n    },\n    {\n      "variable": "test",\n      "creation": "pd.read_csv",\n      "flows": ["Converted to numpy array and split into features (test_x) and labels (test_y)."]\n    },\n    {\n      "variable": "train_x",\n      "creation": "Extracted from train array.",\n      "flows": ["Reshaped into a format suitable for the CNN, shuffled, and used in training."]\n    },\n    {\n      "variable": "train_y",\n      "creation": "pd.get_dummies",\n      "flows": ["One-hot encoded version of the labels for model training."]\n    },\n    {\n      "variable": "train_X",\n      "creation": "Shuffle function applied to train_x.",\n      "flows": ["Used for training the model."]\n    },\n    {\n      "variable": "train_y",\n      "creation": "Shuffle function applied to train_y.",\n      "flows": ["Used during model training as target labels."]\n    },\n    {\n      "variable": "pred",\n      "creation": "conv_net function",\n      "flows": ["Used to compute model predictions during training and evaluation."]\n    },\n    {\n      "variable": "accuracy",\n      "creation": "accuracy_score",\n      "flows": ["Calculated after model predictions to evaluate model performance."]\n    }\n  ],\n  "models": [\n    {\n      "model_name": "Convolutional Neural Network (CNN)",\n      "input_features": "train_x or test_x",\n      "target_variable": "train_y or test_y",\n      "hyperparameters": {\n        "learning_rate": 0.001,\n        "batch_size": 100,\n        "training_iters": 10,\n        "network_structure": [\n          {"layer": "conv1", "filters": 32, "kernel_size": [3, 3], "activation": "relu"},\n          {"layer": "conv2", "filters": 64, "kernel_size": [3, 3], "activation": "relu"},\n          {"layer": "conv3", "filters": 128, "kernel_size": [3, 3], "activation": "relu"},\n          {"layer": "dense", "neurons": 100},\n          {"layer": "output", "neurons": 10}\n        ]\n      }\n    }\n  ]\n}