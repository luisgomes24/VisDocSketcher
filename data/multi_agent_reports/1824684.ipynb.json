{"data_sources":[{"file_path":"../input/home-data-for-ml-course/train.csv","description":"Contains data related to home sales, particularly features affecting price and the target variable (SalePrice)."}],"data_variables":[{"name":"home_data","description":"DataFrame containing the entire dataset read from the CSV file."},{"name":"y","description":"Series representing the target variable 'SalePrice' extracted from the home_data DataFrame."},{"name":"X","description":"DataFrame containing selected feature columns that will be used for predictions."},{"name":"train_X","description":"Training set features created from X after splitting the data."},{"name":"val_X","description":"Validation set features created from X after splitting the data."},{"name":"train_y","description":"Training set target variable (SalePrice) created from y after splitting the data."},{"name":"val_y","description":"Validation set target variable (SalePrice) created from y after splitting the data."},{"name":"iowa_model","description":"DecisionTreeRegressor model initialized for predicting home prices."},{"name":"val_predictions","description":"Predicted values for validation set features (val_X) obtained from the iowa_model."},{"name":"val_mae","description":"Mean Absolute Error calculated to evaluate the prediction performance on validation data."},{"name":"final_model","description":"Final DecisionTreeRegressor model fitted with the best tree size determined from validation."}],"data_flow":[{"variable":"home_data","creation":"pd.read_csv(iowa_file_path)","flows":["Used to create target variable y and features DataFrame X."]},{"variable":"y","creation":"home_data.SalePrice","flows":["Used as the target variable for model training."]},{"variable":"X","creation":"home_data[features]","flows":["Used to split into training and validation sets (train_X, val_X)."]},{"variable":"train_X","creation":"train_test_split(X, y, random_state=1)","flows":["Used for fitting the iowa_model."]},{"variable":"val_X","creation":"train_test_split(X, y, random_state=1)","flows":["Used to evaluate model performance by calculating val_predictions."]},{"variable":"train_y","creation":"train_test_split(X, y, random_state=1)","flows":["Used for fitting the iowa_model."]},{"variable":"val_y","creation":"train_test_split(X, y, random_state=1)","flows":["Used to calculate mean absolute error for model performance evaluation."]},{"variable":"iowa_model","creation":"DecisionTreeRegressor(random_state=1)","flows":["Fitted using train_X and train_y, used to produce val_predictions."]},{"variable":"val_predictions","creation":"iowa_model.predict(val_X)","flows":["Used to calculate val_mae."]},{"variable":"val_mae","creation":"mean_absolute_error(val_predictions, val_y)","flows":["Reported as model performance metric."]},{"variable":"final_model","creation":"DecisionTreeRegressor(max_leaf_nodes=100, random_state=0)","flows":["Fitted with all available data (X, y) after determining best tree size."]}],"models":[{"model_name":"DecisionTreeRegressor","input_features":["LotArea","YearBuilt","1stFlrSF","2ndFlrSF","FullBath","BedroomAbvGr","TotRmsAbvGrd"],"target_variable":"SalePrice","hyperparameters":{"max_leaf_nodes":100,"random_state":0}}]}