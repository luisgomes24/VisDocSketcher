{
  "data_sources": [
    {
      "source": "../input/digit-recognizer/train.csv",
      "description": "Training data containing image data and corresponding labels."
    },
    {
      "source": "../input/digit-recognizer/test.csv",
      "description": "Test data containing image data without labels."
    }
  ],
  "data_variables": [
    {
      "name": "train_data",
      "description": "DataFrame containing training data loaded from train.csv."
    },
    {
      "name": "test_data",
      "description": "DataFrame containing test data loaded from test.csv."
    },
    {
      "name": "data",
      "description": "ImageDataLoaders object created from training images for model training."
    },
    {
      "name": "test_files",
      "description": "List of file paths for test images."
    },
    {
      "name": "submission",
      "description": "DataFrame containing predicted labels for test images ready for submission."
    }
  ],
  "data_flow": [
    {
      "variable": "train_data",
      "creation": "Loaded using pd.read_csv from train.csv.",
      "flow": "Used to generate image files in the specified directory."
    },
    {
      "variable": "test_data",
      "creation": "Loaded using pd.read_csv from test.csv.",
      "flow": "Used to generate image files in the specified directory."
    },
    {
      "variable": "data",
      "creation": "Created using ImageDataLoaders.from_folder with training images.",
      "flow": "Used to train the model."
    },
    {
      "variable": "test_files",
      "creation": "Generated by listing all JPG files in the test images directory.",
      "flow": "Passed to create a test DataLoader for predictions."
    },
    {
      "variable": "predictions",
      "creation": "Generated from the model predictions on the test DataLoader.",
      "flow": "Used to create the submission DataFrame."
    },
    {
      "variable": "submission",
      "creation": "Created as a DataFrame with image IDs and their corresponding predictions.",
      "flow": "Saved to 'submission.csv'."
    }
  ],
  "models": [
    {
      "model": "ResNet50",
      "input_features": "Image pixels from the training dataset.",
      "target_variable": "Digits labels (0-9).",
      "hyperparameters": {
        "learning_rate": 0.001,
        "fine_tune_epochs": 20,
        "batch_size": 32
      }
    }
  ]
}