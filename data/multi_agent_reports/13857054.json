{
  "data_sources": [
    {
      "file": "../input/telco-customer-churn/WA_Fn-UseC_-Telco-Customer-Churn.csv",
      "description": "Contains customer data for a telecom company, including service details and churn status."
    }
  ],
  "data_variables": [
    {
      "name": "df",
      "description": "Initial DataFrame containing the raw customer data loaded from CSV."
    },
    {
      "name": "df1",
      "description": "Filtered DataFrame where 'TotalCharges' is not empty."
    },
    {
      "name": "df2",
      "description": "Final DataFrame after preprocessing, including dummies and scaled features."
    },
    {
      "name": "X",
      "description": "Feature set without the target variable 'Churn'."
    },
    {
      "name": "y",
      "description": "Target variable representing whether the customer has churned (1) or not (0)."
    },
    {
      "name": "X_train",
      "description": "Training feature set used to train the model."
    },
    {
      "name": "X_test",
      "description": "Test feature set used to evaluate the model."
    },
    {
      "name": "y_train",
      "description": "Training target set corresponding to 'X_train'."
    },
    {
      "name": "y_test",
      "description": "Test target set corresponding to 'X_test'."
    },
    {
      "name": "yp",
      "description": "Predicted values generated by the model on the test set."
    },
    {
      "name": "y_pred",
      "description": "Binary predictions based on the model's output (1 for churn, 0 for no churn)."
    }
  ],
  "data_flow": [
    {
      "variable": "df",
      "creation": "Loaded from CSV file.",
      "flow": "Filtered and processed to create df1."
    },
    {
      "variable": "df1",
      "creation": "Filtered df by removing entries based on conditions.",
      "flow": "Processed to create df2 which is used for model training."
    },
    {
      "variable": "df2",
      "creation": "Created by applying one-hot encoding and scaling.",
      "flow": "Split into X and y for model training."
    },
    {
      "variable": "X",
      "creation": "Dropped 'Churn' column from df2.",
      "flow": "Used for model training with 'y_train'."
    },
    {
      "variable": "y",
      "creation": "Extracted 'Churn' column from df2.",
      "flow": "Used for model training with 'X_train'."
    },
    {
      "variable": "X_train",
      "creation": "Split from X using train_test_split.",
      "flow": "Used for training the model."
    },
    {
      "variable": "y_train",
      "creation": "Split from y using train_test_split.",
      "flow": "Used for training the model."
    },
    {
      "variable": "X_test",
      "creation": "Split from X using train_test_split.",
      "flow": "Used for evaluating the model."
    },
    {
      "variable": "y_test",
      "creation": "Split from y using train_test_split.",
      "flow": "Used for evaluating the model."
    },
    {
      "variable": "yp",
      "creation": "Generated by model during prediction on X_test.",
      "flow": "Processed into y_pred for evaluation."
    },
    {
      "variable": "y_pred",
      "creation": "Binary predictions from yp based on threshold.",
      "flow": "Used for generating the confusion matrix and classification report."
    }
  ],
  "models": [
    {
      "model": "Sequential",
      "type": "Neural Network",
      "architecture": [
        {"layer": "Dense", "neurons": 26, "activation": "relu", "input_shape": [26]},
        {"layer": "Dense", "neurons": 20, "activation": "relu"},
        {"layer": "Dense", "neurons": 15, "activation": "relu"},
        {"layer": "Dense", "neurons": 1, "activation": "sigmoid"}
      ],
      "hyperparameters": {
        "optimizer": "adam",
        "loss": "binary_crossentropy",
        "metrics": ["accuracy"]
      },
      "training_epochs": 59,
      "accuracy": "83%"
    }
  ]
}