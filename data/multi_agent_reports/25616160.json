{ "data_sources": [ { "file": "../input/tabular-playground-series-mar-2022/train.csv", "description": "Training data consisting of x, y coordinates of a roadway, traffic direction, and congestion levels in the form of a time series." } ], "data_variables": [ { "name": "data", "description": "DataFrame containing the entire training dataset." }, { "name": "data_dir", "description": "Grouped DataFrame by x, y coordinates and direction, showing the count of congestion." }, { "name": "unique_times", "description": "Array of unique time stamps present in the data, indicating congestion measurements over time." }, { "name": "times_filtered", "description": "Filtered list of unique times based on the selected time interval for visualization." }, { "name": "data_filtered", "description": "Filtered DataFrame that contains only the data relevant to the selected time interval." }, { "name": "d_a", "description": "List of DataFrames, each containing data filtered for a specific time for the animation." }, { "name": "df_array", "description": "List of DataFrames for specific directions and coordinates over the filtered time." }, { "name": "xy_offset", "description": "Dictionary containing offsets for plotting the road segments based on their direction." }, { "name": "colors", "description": "Dictionary mapping road directions to colors used for visualization." } ], "data_flow": [ { "variable": "data", "creation": "pd.read_csv", "flow": "Used to create 'data_dir', filtered in 'data_filtered' and animated in the visualization." }, { "variable": "data_dir", "creation": "data.groupby(['x','y','direction'])['congestion'].count().reset_index()", "flow": "Used in the plotting function 'show_congestion' for visualizing the road network." }, { "variable": "unique_times", "creation": "data['time'].unique()", "flow": "Used to filter and create 'times_filtered'." }, { "variable": "times_filtered", "creation": "get_selected_time(start_time,end_time,unique_times)", "flow": "Used to filter 'data_filtered' and create the animation." }, { "variable": "data_filtered", "creation": "data[data['time'].isin(times_filtered)]", "flow": "Used to create 'd_a' for animation visualization." }, { "variable": "d_a", "creation": "Populating list with DataFrames filtered by time.", "flow": "Used in animation function." }, { "variable": "df_array", "creation": "Populating list with DataFrames for filtered directions and time.", "flow": "Used in secondary animation function." } ], "models": [] }