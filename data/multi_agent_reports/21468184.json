{"data_sources":[{"file_name":"../input/stroke-prediction-dataset/healthcare-dataset-stroke-data.csv","description":"The dataset contains various health metrics and demographic information to predict the occurrence of strokes."}],"data_variables":[{"variable_name":"df","description":"DataFrame that holds the stroke prediction dataset, cleaned and preprocessed."},{"variable_name":"missing","description":"Subset of df containing rows with missing BMI values."},{"variable_name":"no_missing","description":"Subset of df containing rows without missing BMI values."},{"variable_name":"groups","description":"A dictionary to store indices of samples grouped by their features."},{"variable_name":"nn","description":"NearestNeighbors model used to find similar instances for BMI imputation."},{"variable_name":"std","description":"StandardScaler used to standardize features during BMI imputation."},{"variable_name":"y_train","description":"Target variable, representing stroke occurrence, used for training the model."},{"variable_name":"y_test","description":"Target variable, representing stroke occurrence, used for testing the model."},{"variable_name":"X_train","description":"Training set features used to fit the model."},{"variable_name":"X_test","description":"Testing set features used to evaluate the model."},{"variable_name":"clf","description":"GridSearchCV object that holds the optimized model after hyperparameter tuning."}],"data_flow":[{"variable_name":"df","creation_method":"pd.read_csv","flow":"Cleaned by dropping 'id', null BMI, and imputing BMI values; used for further analysis and modeling."},{"variable_name":"missing","creation_method":"Filtering df","flow":"Used to find similar records to impute missing BMI values."},{"variable_name":"no_missing","creation_method":"Filtering df","flow":"Used as a basis for calculating neighbors for imputation."},{"variable_name":"groups","creation_method":"Iterating over features","flow":"Stores indices of records to find patterns and apply imputation."},{"variable_name":"nn","creation_method":"NearestNeighbors(n_neighbors=1)","flow":"Used to find the nearest neighbors during BMI imputation."},{"variable_name":"std","creation_method":"StandardScaler()","flow":"Standardizes features for the nearest neighbors algorithm."},{"variable_name":"X_train","creation_method":"train_test_split","flow":"Used to train the machine learning model."},{"variable_name":"X_test","creation_method":"train_test_split","flow":"Used to test the machine learning model."},{"variable_name":"clf","creation_method":"GridSearchCV","flow":"Trains the model on X_train and y_train, and optimizes hyperparameters."},{"variable_name":"y_train","creation_method":"train_test_split","flow":"Used as the target variable for training the model."},{"variable_name":"y_test","creation_method":"train_test_split","flow":"Used as the target variable for testing the model."}],"models":[{"model_name":"SGDClassifier","input_features":"Features from df excluding 'stroke'","target_variable":"'stroke' column","hyperparameters":{"sgdclassifier__alpha":"[1e-4, 1e-3, 0.01]","sgdclassifier__class_weight":"[{0:1, 1:10},{0:1, 1:15}]","sgdclassifier__penalty":"'elasticnet'","sgdclassifier__l1_ratio":"[0, 0.15, 0.5, 1]"}}]}