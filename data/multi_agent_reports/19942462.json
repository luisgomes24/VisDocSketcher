{\n  "data_sources": [\n    {\n      "file_path": "../input/train.csv",\n      "description": "Training dataset containing housing features and target variable 'SalePrice'."\n    },\n    {\n      "file_path": "../input/test.csv",\n      "description": "Test dataset containing housing features without target variable 'SalePrice'."\n    }\n  ],\n  "data_variables": [\n    {\n      "variable_name": "X",\n      "description": "Initial DataFrame containing all training data including target variable."\n    },\n    {\n      "variable_name": "y",\n      "description": "Target variable 'SalePrice' extracted from DataFrame X."\n    },\n    {\n      "variable_name": "X_train",\n      "description": "Training features DataFrame after one-hot encoding and column selection."\n    },\n    {\n      "variable_name": "X_valid",\n      "description": "Validation features DataFrame after one-hot encoding and column selection."\n    },\n    {\n      "variable_name": "X_test",\n      "description": "Test features DataFrame after one-hot encoding and column selection."\n    },\n    {\n      "variable_name": "predictions_1",\n      "description": "Predictions generated by the first model on validation features."\n    },\n    {\n      "variable_name": "predictions_2",\n      "description": "Predictions generated by the second model on validation features."\n    },\n    {\n      "variable_name": "predictions_3",\n      "description": "Predictions generated by the third model on validation features."\n    },\n    {\n      "variable_name": "mae_1",\n      "description": "Mean Absolute Error for the first model."\n    },\n    {\n      "variable_name": "mae_2",\n      "description": "Mean Absolute Error for the second model."\n    },\n    {\n      "variable_name": "mae_3",\n      "description": "Mean Absolute Error for the third model."\n    }\n  ],\n  "data_flow": [\n    {\n      "variable": "X",\n      "creation_method": "pd.read_csv",\n      "flows_to": ["y", "X_train_full", "X_valid_full"]\n    },\n    {\n      "variable": "y",\n      "creation_method": "X['SalePrice']",\n      "flows_to": ["predictions_1", "predictions_2", "predictions_3", "mae_1", "mae_2", "mae_3"]\n    },\n    {\n      "variable": "X_train",\n      "creation_method": "pd.get_dummies(X_train) and align",\n      "flows_to": ["my_model_1", "my_model_2", "my_model_3"]\n    },\n    {\n      "variable": "X_valid",\n      "creation_method": "pd.get_dummies(X_valid) and align",\n      "flows_to": ["predictions_1", "predictions_2", "predictions_3"]\n    },\n    {\n      "variable": "my_model_1",\n      "creation_method": "XGBRegressor.fit",\n      "flows_to": ["predictions_1"]\n    },\n    {\n      "variable": "my_model_2",\n      "creation_method": "XGBRegressor.fit with tuned hyperparameters",\n      "flows_to": ["predictions_2"]\n    },\n    {\n      "variable": "my_model_3",\n      "creation_method": "XGBRegressor.fit with poor performance parameters",\n      "flows_to": ["predictions_3"]\n    }\n  ],\n  "models": [\n    {\n      "model_name": "my_model_1",\n      "model_type": "XGBRegressor",\n      "input_features": "X_train",\n      "target_variable": "y_train",\n      "hyperparameters": {"random_state": 0} \n    },\n    {\n      "model_name": "my_model_2",\n      "model_type": "XGBRegressor",\n      "input_features": "X_train",\n      "target_variable": "y_train",\n      "hyperparameters": {"n_estimators": 1000, "learning_rate": 0.05, "random_state": 0, "n_jobs": -1} \n    },\n    {\n      "model_name": "my_model_3",\n      "model_type": "XGBRegressor",\n      "input_features": "X_train",\n      "target_variable": "y_train",\n      "hyperparameters": {"n_estimators": 40, "learning_rate": 0.001} \n    }\n  ]\n}