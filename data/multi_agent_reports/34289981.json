{"data_sources":[{"file_name":"train_BRCpofr.csv","description":"Training data containing customer features and CLTV target."},{"file_name":"test_koRSKBP.csv","description":"Test data to predict CLTV, includes similar features as the train dataset."},{"file_name":"sample_submission.csv","description":"Submission template for the predictions, it contains the same structure for the predicted CLTV."}],"data_variables":[{"variable":"train","description":"DataFrame containing the training dataset after loading and preprocessing."},{"variable":"test","description":"DataFrame containing the test dataset after loading and preprocessing."},{"variable":"y","description":"Target variable containing CLTV values, extracted from the train DataFrame."},{"variable":"X","description":"Feature DataFrame used for training, containing all input features from train except CLTV."},{"variable":"X_train","description":"Training set features for model training obtained from train-test split."},{"variable":"X_test","description":"Testing set features for evaluating model performance obtained from train-test split."},{"variable":"y_train","description":"Training set target for model training obtained from train-test split."},{"variable":"y_test","description":"Testing set target for model evaluation obtained from train-test split."},{"variable":"y_pred","description":"Predicted values of CLTV for the test set extracted after model prediction."},{"variable":"sol","description":"DataFrame prepared for submission containing predictions."}],"data_flow":[{"variable":"train","creation":"read_csv('/kaggle/input/predict-cltv-of-a-customer/train_BRCpofr.csv')","flow":"Cleaned feature DataFrame, used for training the model."},{"variable":"test","creation":"read_csv('/kaggle/input/predict-cltv-of-a-customer/test_koRSKBP.csv')","flow":"Cleaned feature DataFrame, used for prediction."},{"variable":"y","creation":"train.pop('cltv')","flow":"Extracted from train for model training."},{"variable":"X","creation":"train","flow":"Used in train-test split for training and testing."},{"variable":"X_train","creation":"train_test_split(X, y, test_size=0.2)","flow":"Used to train the model."},{"variable":"X_test","creation":"train_test_split(X, y, test_size=0.2)","flow":"Used to evaluate the model."},{"variable":"y_train","creation":"train_test_split(X, y, test_size=0.2)","flow":"Used to train the model."},{"variable":"y_test","creation":"train_test_split(X, y, test_size=0.2)","flow":"Used to evaluate the model."},{"variable":"y_pred","creation":"automl.predict(test)","flow":"Predictions are saved into 'sol' for submission."},{"variable":"sol","creation":"pd.read_csv('/kaggle/input/predict-cltv-of-a-customer/sample_submission.csv')","flow":"Contains final predicted CLTV, exported to CSV."}],"models":[{"model":"AutoML","input_features":"All features from the training data except the target variable 'cltv'.","target_variable":"cltv","hyperparameters":{"task":"regression","metric":"rmse","time_budget":"3600*3 seconds"}}]}