{"data_sources":[{"file_name":"../input/covid19-india-news-headlines-for-nlp/raw_data.csv","description":"Contains news headlines related to COVID-19 along with their sentiment labels (positive or negative)."}],"data_variables":[{"name":"df","description":"DataFrame that holds the dataset loaded from the CSV file including columns for Headline, Sentiment, and Description."},{"name":"X","description":"Independent variable DataFrame, dropping the Sentiment column from df. It contains news headlines."},{"name":"y","description":"Dependent variable Series, containing sentiment labels (0 for negative, 1 for positive)."},{"name":"corpus","description":"List that holds the cleaned and pre-processed headlines."},{"name":"onehot_repr","description":"List of one-hot encoded representation of the corpus."},{"name":"embedded_docs","description":"Array of padded sequences ready to be used in the LSTM model."},{"name":"X_final","description":"Numpy array of embedded document sequences for training/testing."},{"name":"y_final","description":"Numpy array of the sentiment labels for training/testing."},{"name":"X_train","description":"Training set of embedded document arrays (derived from X_final)."},{"name":"X_test","description":"Testing set of embedded document arrays (derived from X_final)."},{"name":"y_train","description":"Training set of sentiment labels (derived from y_final)."},{"name":"y_test","description":"Testing set of sentiment labels (derived from y_final)."},{"name":"y_pred","description":"Predictions generated by the model for the test dataset."}],"data_flow":[{"variable":"df","creation":"Loaded from CSV using pd.read_csv","usage":"Processed to create X and y variables."},{"variable":"X","creation":"Created by dropping the 'Sentiment' column from df","usage":"Used in text preprocessing to create corpus."},{"variable":"y","creation":"Extracted as the 'Sentiment' column from df","usage":"Used as target variable for model training."},{"variable":"corpus","creation":"Built by cleaning and stemming the headlines in X","usage":"Used to create one-hot representations."},{"variable":"onehot_repr","creation":"Generated by applying one-hot encoding to the corpus","usage":"Used to create embedded sequences."},{"variable":"embedded_docs","creation":"Created by padding the one-hot representations","usage":"Used as input for the LSTM model."},{"variable":"X_final","creation":"Converted embedded_docs to Numpy array","usage":"Split into training and testing sets."},{"variable":"X_train","creation":"Derived from train_test_split on X_final","usage":"Used to train the LSTM model."},{"variable":"X_test","creation":"Derived from train_test_split on X_final","usage":"Used to evaluate the model."},{"variable":"y_train","creation":"Derived from train_test_split on y_final","usage":"Used as target for training the model."},{"variable":"y_test","creation":"Derived from train_test_split on y_final","usage":"Used to evaluate the model."},{"variable":"y_pred","creation":"Generated by the model's predict_classes on X_test","usage":"Used to compute the accuracy score."}],"models":[{"name":"LSTM","input_features":"Padded sequences from embedded_docs.","target_variable":"Sentiment labels (0 and 1).","hyperparameters":{"embedding_vector_features":40,"lstm_units":200,"dropout_rate":0.5,"epochs":10,"batch_size":64}}]}