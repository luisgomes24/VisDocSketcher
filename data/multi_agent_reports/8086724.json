{"data_sources":[{"file":"../input/bengali-fastai2-cutmix-mixup-resized-128x128-input/model_0.pth","description":"Pre-trained model weights for the grapheme classification model."},{"file":"/kaggle/input/bengaliai-cv19/test_image_data_0.parquet","description":"Test images for grapheme classification."},{"file":"/kaggle/input/bengaliai-cv19/test_image_data_1.parquet","description":"Test images for grapheme classification."},{"file":"/kaggle/input/bengaliai-cv19/test_image_data_2.parquet","description":"Test images for grapheme classification."},{"file":"/kaggle/input/bengaliai-cv19/test_image_data_3.parquet","description":"Test images for grapheme classification."},{"file":"../input/bengaliai-cv19/train.csv","description":"Training data containing labels for the train images."}],"data_variables":[{"name":"HEIGHT","description":"Height of the input images for the model."},{"name":"WIDTH","description":"Width of the input images for the model."},{"name":"SIZE","description":"The size to which images will be resized."},{"name":"bs","description":"Batch size for loading images."},{"name":"stats","description":"Statistics for normalizing images (mean, std)."},{"name":"arch","description":"The architecture of the deep learning model; in this case, DenseNet121."},{"name":"model","description":"The instance of the model initialized with specific configurations."},{"name":"row_id","description":"List to store identification strings for the predictions."},{"name":"target","description":"List to store predicted classes for grapheme, vowel diacritic, and consonant diacritic."}],"data_flow":[{"variable":"df","creation":"pd.read_csv(LABELS)","flows":"Used to determine the number of unique labels for the models."},{"variable":"model","creation":"Dnet_1ch().cuda(); model.load_state_dict(torch.load(MODEL, map_location=torch.device('cpu')))","flows":"Used for making predictions on the dataset."},{"variable":"ds","creation":"GraphemeDataset(fname)","flows":"Utilized in creating a DataLoader for batching the images."},{"variable":"sub_df","creation":"pd.DataFrame({'row_id': row_id, 'target': target})","flows":"Saved to 'submission.csv' for submission."}],"models":[{"type":"Dnet_1ch","input_features":"images in grayscale format","target_variables":["grapheme_root","vowel_diacritic","consonant_diacritic"],"hyperparameters":{"layers":"AdaptiveConcatPool2d, DenseNet Layers, custom Heads","neurons":"512 neurons in the head layers"}}]}