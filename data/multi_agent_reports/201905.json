{\n  "data_sources": [\n    {\n      "file": "../input/rdany_conversations_2016-03-01.csv",\n      "description": "The dataset includes conversations data."\n    }\n  ],\n  "data_variables": [\n    {\n      "variable": "df",\n      "description": "Pandas DataFrame containing the loaded dataset with columns 'source' and 'text'."\n    },\n    {\n      "variable": "train",\n      "description": "Training dataset created by splitting 'df'."\n    },\n    {\n      "variable": "test",\n      "description": "Testing dataset created by splitting 'df'."\n    },\n    {\n      "variable": "train_features",\n      "description": "TF-IDF features generated from the training corpus."\n    },\n    {\n      "variable": "test_features",\n      "description": "TF-IDF features generated from the testing corpus."\n    },\n    {\n      "variable": "Classifiers",\n      "description": "Dictionary holding various machine learning models."\n    }\n  ],\n  "data_flow": [\n    {\n      "variable": "df",\n      "creation": "Loaded from CSV using pd.read_csv",\n      "flow": [\n        "Cleaned and transformed to only include 'source' and 'text'.",\n        "Used to create 'train' and 'test' datasets."\n      ]\n    },\n    {\n      "variable": "train",\n      "creation": "Created from df using train_test_split",\n      "flow": [\n        "Features extracted to train_features using TfidfVectorizer.",\n        "Used in model training."\n      ]\n    },\n    {\n      "variable": "test",\n      "creation": "Created from df using train_test_split",\n      "flow": [\n        "Features extracted to test_features using TfidfVectorizer.",\n        "Used for model predictions."\n      ]\n    },\n    {\n      "variable": "train_features",\n      "creation": "Generated from train corpus using TfidfVectorizer",\n      "flow": [\n        "Used in ML models for training."\n      ]\n    },\n    {\n      "variable": "test_features",\n      "creation": "Generated from test corpus using TfidfVectorizer",\n      "flow": [\n        "Used in ML models for predictions."\n      ]\n    }\n  ],\n  "models": [\n    {\n      "model": "LogisticRegression",\n      "features": "train_features",\n      "target": "source",\n      "hyperparameters": {\n        "random_state": 42,\n        "C": 5,\n        "max_iter": 200\n      }\n    },\n    {\n      "model": "DecisionTreeClassifier",\n      "features": "train_features",\n      "target": "source",\n      "hyperparameters": {\n        "random_state": 42,\n        "min_samples_leaf": 1\n      }\n    },\n    {\n      "model": "RandomForestClassifier",\n      "features": "train_features",\n      "target": "source",\n      "hyperparameters": {\n        "random_state": 42,\n        "n_estimators": 100,\n        "n_jobs": -1\n      }\n    },\n    {\n      "model": "GradientBoostingClassifier",\n      "features": "train_features",\n      "target": "source",\n      "hyperparameters": {\n        "random_state": 42,\n        "n_estimators": 100,\n        "learning_rate": 0.3\n      }\n    }\n  ]\n}