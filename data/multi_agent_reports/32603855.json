{ "data_sources": [ { "file_name": "train.csv", "description": "Training dataset containing information on Titanic passengers, including features for predicting survival." }, { "file_name": "test.csv", "description": "Test dataset containing information on Titanic passengers for prediction purposes." } ], "data_variables": [ { "name": "train", "description": "DataFrame containing the training data read from 'train.csv'." }, { "name": "test", "description": "DataFrame containing the test data read from 'test.csv'." }, { "name": "X", "description": "Feature matrix containing all columns from the training set except the target variable 'Survived'." }, { "name": "y", "description": "Target vector containing the 'Survived' column from the training set." }, { "name": "X_train", "description": "Training split of the feature matrix X for model training." }, { "name": "X_cv", "description": "Cross-validation split of the feature matrix X for validating model performance." }, { "name": "y_train", "description": "Training split of the target vector y." }, { "name": "y_cv", "description": "Cross-validation split of the target vector y." }, { "name": "models", "description": "DataFrame containing the performance metrics of various classifiers evaluated during model training." }, { "name": "submission", "description": "DataFrame prepared for submission with PassengerId and predicted Survival values." } ], "data_flow": [ { "variable": "train", "creation": "pd.read_csv('/kaggle/input/titanic/train.csv')", "flow": "Used for exploratory data analysis and model training." }, { "variable": "test", "creation": "pd.read_csv('/kaggle/input/titanic/test.csv')", "flow": "Used for making predictions and creating the submission file." }, { "variable": "X", "creation": "train.loc[:, train.columns != 'Survived'].values", "flow": "Used as input features for training the model." }, { "variable": "y", "creation": "train['Survived'].values", "flow": "Used as the target variable for training the model." }, { "variable": "X_train", "creation": "train_test_split(X, y, test_size=0.2, random_state=0)", "flow": "Used to train the models." }, { "variable": "X_cv", "creation": "train_test_split(X, y, test_size=0.2, random_state=0)", "flow": "Used to validate the models." }, { "variable": "y_train", "creation": "train_test_split(X, y, test_size=0.2, random_state=0)", "flow": "Used to train the models." }, { "variable": "y_cv", "creation": "train_test_split(X, y, test_size=0.2, random_state=0)", "flow": "Used to validate the models." }, { "variable": "models", "creation": "LazyClassifier().fit(X_train, X_cv, y_train, y_cv)", "flow": "Stores accuracy results of various models for evaluation." }, { "variable": "submission", "creation": "test['Survived'] = model.predict(test.values); submission = test[['PassengerId','Survived']]", "flow": "Saved as a CSV file for submission." } ], "models": [ { "model": "XGBClassifier", "input_features": "X", "target_variable": "y", "hyperparameters": {} }, { "model": "Various models evaluated using LazyClassifier", "input_features": "X_train", "target_variable": "y_train", "hyperparameters": "N/A (basic models without parameter tuning used for comparison)" } ] }