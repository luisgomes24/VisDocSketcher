{
  "data_sources": [
    {
      "file_path": "/kaggle/input/diamonds/diamonds.csv",
      "description": "Contains information about diamonds, including features like carat, cut, color, clarity, and price."
    }
  ],
  "data_variables": [
    {
      "name": "df",
      "description": "DataFrame containing the diamonds dataset after loading it from the CSV file."
    },
    {
      "name": "X",
      "description": "Features used for training the model, excluding the target variable (price)."
    },
    {
      "name": "y",
      "description": "Target variable representing the price of diamonds."
    },
    {
      "name": "X_train_scaled",
      "description": "Training features after normalization using MinMaxScaler."
    },
    {
      "name": "X_test_scaled",
      "description": "Test features after normalization using MinMaxScaler."
    },
    {
      "name": "final_model",
      "description": "The final model chosen for predictions, which is the CatBoostRegressor."
    },
    {
      "name": "y_predicted",
      "description": "Predicted prices for the test set generated by the final model."
    },
    {
      "name": "mse",
      "description": "Mean Squared Error of the predictions on the test set."
    },
    {
      "name": "mae",
      "description": "Mean Absolute Error of the predictions on the test set."
    },
    {
      "name": "correlation_stats",
      "description": "Correlation stats between actual and predicted prices, including correlation coefficient and p-value."
    }
  ],
  "data_flow": [
    {
      "variable": "df",
      "creation": "Loaded using pd.read_csv from 'diamonds.csv'",
      "usage": [
        "Data cleaning by removing duplicates",
        "Feature encoding for model training",
        "Statistical summary for exploration",
        "Correlation analysis with visualizations"
      ]
    },
    {
      "variable": "X",
      "creation": "Created by dropping the 'price' column from df",
      "usage": [
        "Used as features for training and testing the model"
      ]
    },
    {
      "variable": "y",
      "creation": "Extracted as the 'price' column from df",
      "usage": [
        "Used as the target variable for model training and evaluation"
      ]
    },
    {
      "variable": "X_train_scaled",
      "creation": "Created by applying MinMaxScaler on X_train",
      "usage": [
        "Used to train the final model"
      ]
    },
    {
      "variable": "X_test_scaled",
      "creation": "Scaling applied to X_test using the same scaler fitted on training data",
      "usage": [
        "Used for making predictions on the test set"
      ]
    },
    {
      "variable": "final_model",
      "creation": "Initialized as CatBoostRegressor",
      "usage": [
        "Fitted using X_train_scaled and y_train",
        "Used for generating predictions and evaluating performance"
      ]
    },
    {
      "variable": "y_predicted",
      "creation": "Generated using final_model's predict method on X_test_scaled",
      "usage": [
        "Evaluated for model accuracy using mse and mae"
      ]
    },
    {
      "variable": "mse",
      "creation": "Calculated using mean_squared_error on y_test and y_predicted",
      "usage": [
        "Used to assess model performance"
      ]
    },
    {
      "variable": "mae",
      "creation": "Calculated using mean_absolute_error on y_test and y_predicted",
      "usage": [
        "Used to assess model performance"
      ]
    },
    {
      "variable": "correlation_stats",
      "creation": "Generated using spearmanr on y_test and y_predicted",
      "usage": [
        "Used to assess the correlation between the predicted and actual prices"
      ]
    }
  ],
  "models": [
    {
      "model_name": "CatBoostRegressor",
      "input_features": "All encoded features from the dataset except 'price'",
      "target_variable": "price",
      "hyperparameters": {}
    }
  ]
}