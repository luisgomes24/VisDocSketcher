{\n  "data_sources": [],\n  "data_variables": [\n    {\n      "name": "num",\n      "description": "A numerical argument used in the 'sign' function to determine if it is positive, negative or zero."\n    },\n    {\n      "name": "total_candies",\n      "description": "An integer representing the number of candies to be distributed among friends in the 'to_smash' function."\n    },\n    {\n      "name": "have_umbrella",\n      "description": "A boolean representing if the customer has an umbrella."\n    },\n    {\n      "name": "rain_level",\n      "description": "A numerical value indicating the intensity of rain."\n    },\n    {\n      "name": "have_hood",\n      "description": "A boolean representing if the customer has a hood."\n    },\n    {\n      "name": "is_workday",\n      "description": "A boolean indicating whether today is a workday."\n    },\n    {\n      "name": "number",\n      "description": "A numerical input to check if it is negative in the 'is_negative' function."\n    },\n    {\n      "name": "ketchup",\n      "description": "A boolean representing if the customer wants ketchup on their hot dog."\n    },\n    {\n      "name": "mustard",\n      "description": "A boolean representing if the customer wants mustard on their hot dog."\n    },\n    {\n      "name": "onion",\n      "description": "A boolean representing if the customer wants onions on their hot dog."\n    },\n    {\n      "name": "player_total",\n      "description": "The total points of the player in the simplified blackjack game."\n    },\n    {\n      "name": "dealer_total",\n      "description": "The total points of the dealer in the simplified blackjack game."\n    },\n    {\n      "name": "player_low_aces",\n      "description": "The count of the player's aces counted as low (value 1)."\n    },\n    {\n      "name": "player_high_aces",\n      "description": "The count of the player's aces counted as high (value 11)."\n    }\n  ],\n  "data_flow": [\n    {\n      "variable": "num",\n      "creation": "Defined in the function 'sign'",\n      "flow": "Passed to the return statement of the function."\n    },\n    {\n      "variable": "total_candies",\n      "creation": "Defined in the function 'to_smash'",\n      "flow": "Used in the print statement and the return statement of the function."\n    },\n    {\n      "variable": "have_umbrella",\n      "creation": "Defined in the function 'prepared_for_weather'",\n      "flow": "Used as part of the return logic to determine if the player is prepared for the weather."\n    },\n    {\n      "variable": "rain_level",\n      "creation": "Defined in the function 'prepared_for_weather'",\n      "flow": "Used as part of the return logic to determine if the player is prepared for the weather."\n    },\n    {\n      "variable": "have_hood",\n      "creation": "Defined in the function 'prepared_for_weather'",\n      "flow": "Used as part of the return logic to determine if the player is prepared for the weather."\n    },\n    {\n      "variable": "is_workday",\n      "creation": "Defined in the function 'prepared_for_weather'",\n      "flow": "Used as part of the return logic to determine if the player is prepared for the weather."\n    },\n    {\n      "variable": "number",\n      "creation": "Defined in the function 'is_negative'",\n      "flow": "Used in the return statement of the function."\n    },\n    {\n      "variable": "ketchup",\n      "creation": "Defined in the function 'wants_all_toppings'",\n      "flow": "Used in the function logic."\n    },\n    {\n      "variable": "mustard",\n      "creation": "Defined in the function 'wants_all_toppings'",\n      "flow": "Used in the function logic."\n    },\n    {\n      "variable": "onion",\n      "creation": "Defined in the function 'wants_all_toppings'",\n      "flow": "Used in the function logic."\n    },\n    {\n      "variable": "player_total",\n      "creation": "Defined in 'should_hit'",\n      "flow": "Used to determine if the player should hit or stay."\n    },\n    {\n      "variable": "dealer_total",\n      "creation": "Defined in 'should_hit'",\n      "flow": "Used to determine if the player should hit or stay."\n    },\n    {\n      "variable": "player_low_aces",\n      "creation": "Defined in 'should_hit'",\n      "flow": "Tracked for assessing the player's hand."\n    },\n    {\n      "variable": "player_high_aces",\n      "creation": "Defined in 'should_hit'",\n      "flow": "Tracked for assessing the player's hand."\n    }\n  ],\n  "models": []\n}