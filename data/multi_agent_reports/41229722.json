{"data_sources": [{"file_path": "/kaggle/input/vehicle-dataset-from-cardekho/car data.csv", "description": "Vehicle dataset containing various features such as car name, owner, fuel type, seller type, and selling price."}], "data_variables": [{"variable_name": "carPrice_dataset", "description": "DataFrame containing the car price dataset after loading the CSV set."}, {"variable_name": "X", "description": "Features set excluding the target variable Selling_Price."}, {"variable_name": "y", "description": "Target variable representing the Selling_Price of the cars."}, {"variable_name": "x_train", "description": "Training set features after splitting the dataset."}, {"variable_name": "x_test", "description": "Test set features after splitting the dataset."}, {"variable_name": "y_train", "description": "Training set target variable after splitting the dataset."}, {"variable_name": "y_test", "description": "Test set target variable after splitting the dataset."}], "data_flow": [{"variable": "carPrice_dataset", "creation_method": "pd.read_csv()", "flow": "Data exploration and cleaning."}, {"variable": "X", "creation_method": "drop() and pd.get_dummies()", "flow": "Used for model training as feature set."}, {"variable": "y", "creation_method": "simple indexing", "flow": "Used for model training as target variable."}, {"variable": "x_train", "creation_method": "train_test_split()", "flow": "Input to models for training."}, {"variable": "x_test", "creation_method": "train_test_split()", "flow": "Input to models for testing and prediction."}, {"variable": "y_train", "creation_method": "train_test_split()", "flow": "Target variable for training models."}, {"variable": "y_test", "creation_method": "train_test_split()", "flow": "Target variable for testing and evaluating models."}], "models": [{"model_name": "RandomForestRegressor", "input_features": "All features except Selling_Price.", "target_variable": "Selling_Price", "hyperparameters": "n_estimators=10"}, {"model_name": "RANSACRegressor", "input_features": "All features except Selling_Price.", "target_variable": "Selling_Price", "hyperparameters": "None"}, {"model_name": "HuberRegressor", "input_features": "All features except Selling_Price.", "target_variable": "Selling_Price", "hyperparameters": "None"}, {"model_name": "LinearRegression", "input_features": "All features except Selling_Price.", "target_variable": "Selling_Price", "hyperparameters": "None"}, {"model_name": "SGDRegressor", "input_features": "All features except Selling_Price.", "target_variable": "Selling_Price", "hyperparameters": "None"}, {"model_name": "SVR", "input_features": "All features except Selling_Price.", "target_variable": "Selling_Price", "hyperparameters": "None"}, {"model_name": "DecisionTreeRegressor", "input_features": "All features except Selling_Price.", "target_variable": "Selling_Price", "hyperparameters": "None"}, {"model_name": "AdaBoostRegressor", "input_features": "All features except Selling_Price.", "target_variable": "Selling_Price", "hyperparameters": "None"}, {"model_name": "GradientBoostingRegressor", "input_features": "All features except Selling_Price.", "target_variable": "Selling_Price", "hyperparameters": "None"}, {"model_name": "BaggingRegressor", "input_features": "All features except Selling_Price.", "target_variable": "Selling_Price", "hyperparameters": "None"}]}