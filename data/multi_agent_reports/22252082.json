{
  "data_sources": [
    {
      "source": "Image URLs",
      "description": "Several test images used for OCR comparison from a GitHub repository."
    }
  ],
  "data_variables": [
    {
      "name": "url",
      "description": "List of image URLs for testing with Keras-OCR, EasyOCR, and Pytesseract."
    },
    {
      "name": "images",
      "description": "List of images loaded from the URLs for OCR processing."
    },
    {
      "name": "pipline",
      "description": "Keras-OCR pipeline for running OCR on images."
    },
    {
      "name": "kerasocr_preds",
      "description": "Predictions from the Keras-OCR for each image."
    },
    {
      "name": "text_reader",
      "description": "EasyOCR reader initialized for performing OCR on the images."
    },
    {
      "name": "results",
      "description": "Results from EasyOCR, including bounding boxes, text, and confidence."
    },
    {
      "name": "tesseract_preds",
      "description": "List of OCR results produced by Pytesseract for each image."
    }
  ],
  "data_flow": [
    {
      "variable": "url",
      "creation_method": "Defined as a list of image URLs.",
      "flow": "Used to fetch images for OCR processes."
    },
    {
      "variable": "images",
      "creation_method": "Images read using keras_ocr.tools.read.",
      "flow": "Inputs for Keras-OCR, EasyOCR, and Pytesseract; displayed using pyplot."
    },
    {
      "variable": "pipline",
      "creation_method": "Keras-OCR pipeline initialized.",
      "flow": "Used for generating predictions stored in kerasocr_preds."
    },
    {
      "variable": "kerasocr_preds",
      "creation_method": "Generated by running the pipeline's recognize method.",
      "flow": "Used for visualization of OCR results with annotations."
    },
    {
      "variable": "text_reader",
      "creation_method": "EasyOCR reader initialized.",
      "flow": "Used to read text from images, resulting in 'results' variable."
    },
    {
      "variable": "results",
      "creation_method": "Generated by calling readtext method on each image.",
      "flow": "Text results printed and images displayed."
    },
    {
      "variable": "tesseract_preds",
      "creation_method": "Filled through iterating images and calling pytesseract.image_to_string.",
      "flow": "Printed results for each image."
    }
  ],
  "models": [
    {
      "model": "Keras-OCR",
      "input_features": "Images with text.",
      "target_variables": "Text in images.",
      "hyperparameters": "N/A"
    },
    {
      "model": "EasyOCR",
      "input_features": "Images (in English).",
      "target_variables": "Detected text with bounding boxes.",
      "hyperparameters": "Language setting (English in this case)."
    },
    {
      "model": "Pytesseract",
      "input_features": "Images.",
      "target_variables": "Extracted string data from images.",
      "hyperparameters": "N/A"
    }
  ]
}