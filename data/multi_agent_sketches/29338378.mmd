%% This Mermaid.js diagram visualizes the data flow, transformations, and modeling in the provided notebook.

flowchart TD
    %% Data sources are where the data originates before being processed
    A1["Training Dataset"] -->|"Load and preprocess"| B1[Numpy Array 'x']
    A2["Training Labels"] -->|"One-hot encode"| B2[Categorical Labels 'y']
    A3["Validation Dataset"] -->|"Load and preprocess"| B3[Numpy Array 'val_images']
    A4["Validation Labels"] -->|"One-hot encode"| B4[Categorical Labels 'val_image_label']
    A5["Test Dataset"] -->|"Load and preprocess"| B5[Numpy Array 'test_images']
    A6["Test Labels"] -->|"One-hot encode"| B6[Categorical Labels 'test_image_label']

    %% This section describes data preparation and splitting procedure
    B1 -->|"Training Data"| C1[xtrain]
    B2 -->|"Training Labels"| C2[ytrain]
    B1 -.->|"Testing Data"| C3[xtest]
    B2 -.->|"Testing Labels"| C4[ytest]
    C1 -.-> D1["MobileNetV2 Model Training"]
    C2 -.-> D1
    C3 -.-> D2["Model Validation"]
    C4 -.-> D2
    B5 -->|"Testing Images"| D3["Model Prediction"]
    B6 -->|"True Test Labels"| D4["Model Evaluation"]

    %% Model Training Details 
    D1 -->|"Trained Model"| E1["MobileNetV2 with Specific Layers"]
    D2 -->|"Validation Results"| E2["Evaluate Validation Accuracy"]
    D3 -->|"Predicted Labels"| E3["Confusion Matrix & Report"]
    D4 -->|"Test Evaluation Metrics"| E4

    %% Model description and additional behaviors
    E1 -.->|"GlobalAveragePooling2D, Dense Layers, Dropout"| F1["Model Layers & Hyperparameters"]
    E2 -.->|"Performance Visualization"| F2["Accuracy & Loss Plots"]
    E3 -.->|"Comparison against True Labels"| F3["Classification Report"]
    F3 --> G["End of Workflow"]
