%% Mermaid diagram for data science workflow\nflowchart TD\n    subgraph DataSources\n        A[/sample_submit.csv/] \n        %% Sample submission file\n    end\n    subgraph DataVariables\n        B["pd_submit"] \n        %% DataFrame for submission with predictions\n        C["train_dataset"] \n        %% Custom train dataset\n        D["test_dataset"] \n        %% Custom test dataset\n        E["train_data_loader"] \n        %% DataLoader for train dataset\n        F["test_data_loader"] \n        %% DataLoader for test dataset\n        G["model"] \n        %% EfficientNet model\n        H["pred_list"] \n        %% List of predictions\n        I["loss_fn"] \n        %% Loss function: CrossEntropyLoss\n        J["optimizer"] \n        %% Optimizer: Adam\n    end\n    subgraph DataFlow\n        B --> |"Updated with predictions"| A\n        C --> |"Used in"| E\n        D --> |"Used in"| F\n        E --> |"Batches for training"| G\n        F --> |"Batches for predictions"| G\n        G --> |"Generates"| H\n        H --> |"Updates"| B\n    end\n    subgraph ModelHyperparameters\n        K["EfficientNet"] \n        %% Model\n        L["num_classes: 5"] \n        %% Number of classes\n        M["learning_rate: 5e-5"] \n        %% Learning rate\n        N["epochs: 21"] \n        %% Number of epochs\n    end\n    M((Train)) --> I
    M((Evaluate)) --> J
