flowchart TD;
    A["<img src='icons/file.svg' width=100 height=100/> <br/> Load Train Data"] -->|"pd.read_csv('../input/train.csv')"| B["<img src='icons/table.svg' width=100 height=100/> <br/> train_df"];
    A1["<img src='icons/file.svg' width=100 height=100/> <br/> Load Test Data"] -->|"pd.read_csv('../input/test.csv')"| B1["<img src='icons/table.svg' width=100 height=100/> <br/> test_df"];
    B -->|"train_df['question_text'].fillna('dieter').values"| C["<img src='icons/column_split.svg' width=100 height=100/> <br/> X_train"];
    B1 -->|"test_df['question_text'].fillna('dieter').values"| C1["<img src='icons/column_split.svg' width=100 height=100/> <br/> X_test"];
    B -->|"train_df['target']"| D["<img src='icons/row_split.svg' width=100 height=100/> <br/> y"];
    C -->|"sequence.pad_sequences(X_train, ...)"| E["<img src='icons/brain.svg' width=100 height=100/> <br/> x_train"];
    C1 -->|"sequence.pad_sequences(X_test, ...)"| E1["<img src='icons/brain.svg' width=100 height=100/> <br/> x_test"];
    B -->|"embedding_matrix..."| F["<img src='icons/brain.svg' width=100 height=100/> <br/> embedding_matrix"];
    F -->|"get_model()"| G["<img src='icons/brain.svg' width=100 height=100/> <br/> model"];
    G -->|"model.fit()"| H["<img src='icons/brain.svg' width=100 height=100/> <br/> Model Training"];
    E1 -->|"predictions"| I["<img src='icons/brain.svg' width=100 height=100/> <br/> Predictions"];
    I -->|"pd.DataFrame({'qid': test_df['qid'], 'prediction': y_te})"| J["<img src='icons/file.svg' width=100 height=100/> <br/> CSV Output"];
    H -->|"results"| J;
    style A fill:#87CEEB;
    style B fill:#87CEEB;
    style A1 fill:#87CEEB;
    style B1 fill:#87CEEB;
    style C fill:#C6F4D6;
    style C1 fill:#C6F4D6;
    style D fill:#87CEEB;
    style E fill:#C6F4D6;
    style E1 fill:#C6F4D6;
    style F fill:#C6F4D6;
    style G fill:#C6F4D6;
    style H fill:#F2C464;
    style I fill:#F2C464;
    style J fill:#F2C464;